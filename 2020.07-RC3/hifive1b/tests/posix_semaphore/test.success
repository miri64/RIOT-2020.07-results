r
/builds/workspace/RIOT.git.jk/dist/tools/pyterm/pyterm -p "/dev/riot/tty-hifive1b" -b "115200" --no-reconnect --noprefix --no-repeat-command-on-empty-line
Twisted not available, please install it if you want to use pyterm's JSON capabilities
Connect to serial port /dev/riot/tty-hifive1b
Welcome to pyterm!
Type '/exit' to exit.
[1F[0J[?25h[0;39;49mBench Clock Reset Complete

ATE0-->ATE0
OK
AT+BLEINIT=0-->OK
AT+CWMODE=0-->OK

Help: Press s to start test, r to print it is ready
READY
s
START
main(): This is RIOT! (Version: riot/2020.07-RC3)
######################### TEST1:
first: sem_init
first: thread create
second: sem_trywait
second: sem_trywait failed
second: sem_trywait done with == 0
second: wait for post
first: thread created
first: sem_getvalue
first: sem_getvalue != 0
first: do yield
first: done yield
first: sem_trywait
first: sem_trywait FAILED
first: sem_trywait done
first: sem_post
second: sem was posted
second: end
first: sem_post done
first: sem_destroy
first: end
######################### TEST2:
first: sem_init
first: thread create: 5
first: thread created: priority 5 (1/5)
first: thread create: 4
first: thread created: priority 4 (2/5)
first: thread create: 3
first: thread created: priority 3 (3/5)
first: thread create: 2
first: thread created: priority 2 (4/5)
first: thread create: 1
first: thread created: priority 1 (5/5)
------------------------------------------
post no. 0
Thread 'priority 1' woke up.
Back in main thread.
post no. 1
Thread 'priority 2' woke up.
Back in main thread.
post no. 2
Thread 'priority 3' woke up.
Back in main thread.
post no. 3
Thread 'priority 4' woke up.
Back in main thread.
post no. 4
Thread 'priority 5' woke up.
Back in main thread.
######################### TEST3:
first: sem_init s1
first: sem_init s2
first: create thread 1
first: create thread 2
------------------------------------------
post s1
Thread 1 woke up after waiting for s1.
post s2
Thread 2 woke up after waiting for s2.
post s2
Thread 1 woke up after waiting for s2.
post s1
Thread 2 woke up after waiting for s1.
######################### TEST4:
first: sem_init s1
first: wait 1 sec for s1
first: timed out
first: waited 1000213 usec
######################### DONE

